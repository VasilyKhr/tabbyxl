(import ru.icc.cells.ssdc.model.*)
(import ru.icc.cells.ssdc.model.style.*)

(deftemplate Cell (declare (from-class CCell)))
(deftemplate Label (declare (from-class CLabel)))
(deftemplate Entry (declare (from-class CEntry)))
(deftemplate Category (declare (from-class CCategory)))

( defrule rule1
?c <- ( Cell {rt > 1} {cl > 1} { blank != TRUE } )
( call ?c.text matches "#|s")
=>
( call ?c setText "0")
( call ?c update )
)

( defrule rule2
?c <- ( Cell {rt > 1} {cl > 1} { blank != TRUE }  )
( call ?c.text matches "F|\\.|\\.{2}+|\\.{3}+|\\u2026|\\u2014|x|-|NA" )
=>
( call ?c setText null)
( call ?c update )
)

( defrule rule3
?c <- ( Cell {rt > 1} {cl > 1} { blank != TRUE } )
( call ?c.text matches "(\\u2012|\\u2013|\\u2014|\\u2015|\\u002D|\\u2212|\\uFF0D)(\\d+(\\s|\\.|,)?\\d*)+(E|%|\\*)?" )
( bind ?t ?c.text )
=>
( call ?c setText ( call "-" concat ( call ?t substring 1 ) ) )
( call ?c update )
)

( defrule rule4
?c <- ( Cell {rt > 1} {cl > 1} { blank != TRUE } )
=>
( call ?c setMark "ColumnHeading" )
( call ?c newLabel )
( call ?c update )
)

( defrule rule5
?c1 <- (Cell { mark == "ColumnHeading" })
?c2 <- (Cell { mark == null } { rt > 1 } { cl > 1 } { blank != TRUE } { rt == (+ (?c1 rb) 1) } { ( cl >= (?c1 cl) && cr < (?c1 cr)) ||  ( cl > (?c1 cl) && cr <= (?c1 cr) ) } )
=>
( call ?c2 setMark "ColumnHeading")
( call ?c2 newLabel)
( call ?c2.label setParent ?c1.label)
( call ?c1 update )
( call ?c2 update )
)

( defrule rule6
?c <- ( Cell { rt > 1 } { cl == 1 } { blank != TRUE } { mark == null } )
=>
( call ?c setMark "RowHeading" )
( call ?c newLabel )
( call ?c update )
)

( defrule rule7
?c0 <- ( Cell { rt == 1 } { cl == 1 } { blank != TRUE } )
?c1 <- ( Cell { rt > 1 } { cl > 1 } { blank != TRUE } { mark == null } )
( not ( call ?c1.text matches "(-|\\+|\\$)?(\\d+(\\s|\\.|,)?\\d*)+(E|%|\\*)?" ) )
?c2 <- ( Cell { rt > 1 } { cl > 1 } { blank != TRUE } { mark == null } { cl <= (?c1 cl) } )
=>
( call ?c2 setMark "RowHeading" )
( call ?c2 newLabel )
( call ?c2 update )
)

( defrule rule8
?c <- ( Cell { cl > 1 } { rt > 1 } { blank != TRUE } { mark == null } )
=>
( call ?c setMark "DataCell" )
( call ?c newEntry )
( call ?c update )
)

( defrule rule9
?c <- ( Cell { cl == 1 } { mark == "RowHeading" } { charAt0 == 45 } )
;;( == ( ?c.text charAt 0 ) 45 )
=>
( call ?c setIndent 2 )
( call ?c update )
)

( defrule rule10
?c1 <- ( Cell { cl == 1 } { mark == "RowHeading" } )
?c2 <- ( Cell { cl == 1 } { mark == "RowHeading" } { rt > (?c1 rt) } { indent == (+ (?c1 indent) 2) } )
( not ( exists ( Cell { cl == 1 } { mark == "RowHeading" } { indent == (?c1 indent) } { rt > (?c1 rt) } { rt < (?c2 rt) } )))
=>
( call ?c2.label setParent ?c1.label)
)

( defrule rule11
?c1 <- ( Cell { cl == 1 } { mark == "RowHeading" } { indent == 0} )
( call ?c1.style.font isBold )
( not ( call ?c1.text matches "(?i)(Total\\s*)|(I alt\\s*)|(All\\s*)" ) )
?c2 <- ( Cell { cl == 1 } { mark == "RowHeading" } { indent == 0 } )
( call ?c2.style.font isNormal)
( not ( exists ( Cell { cl == 1 } { mark == "RowHeading" } { boldFlag == TRUE } { rt > (?c1 rt) } { rt < (?c2 rt) } { indent == 0} )))
=>
( call ?c2.label setParent ?c1.label )
)

( defrule rule12
?c <- ( Cell { mark == "ColumnHeading" })
=>
(call ?c.label setCategory "ColumnHeading")
)

( defrule rule13
?c1 <- ( Cell { rt == 1} { cl > 1 } { blank == FALSE } )
( bind ?index ?c1.cl )
?c2 <- ( Cell { mark == "RowHeading" } { cl == (?c1 cl) })
=>
( call ?c2.label setCategory (+ "RowHeading" ?index))
)

( defrule rule14
?c1 <- ( Cell { rt == 1 } { cl == 1 } )
?c2 <- ( Cell { mark == "RowHeading" } { cl == (?c1 cl) } )
=>
( call ?c2.label setCategory "RowHeading1")
)

( defrule rule15
?c1 <- ( Cell { mark == "ColumnHeading" } )
( call ?c1.label isTerminal )
?c2 <- ( Cell { mark == "DataCell" } { cl == (?c1 cl) } )
=>
( call ?c2.entry addLabel ?c1.label )
)

( defrule rule16
?c1 <- ( Cell { mark == "RowHeading" } )
?c2 <- ( Cell { mark == "DataCell" } { rt == (?c1 rt) } )
=>
( call ?c2.entry addLabel ?c1.label )
)